define(["api.vibe"],function(VibeApi){module("VibeApi test"),test("Create instance without options.",function(){raises(function(){new VibeApi},"Constructing without options will result in an error.")}),asyncTest("Create an instance with valid options",function(){var api=new VibeApi({host:"192.168.0.99",port:6232,onconnect:function(){ok(!0,"Api connected successfully."),equal(api.connecting,!1,"Api should not be connecting."),equal(api.connected,!0,"Api should be connected."),equal(api.disconnected,!1,"Api should not be disconnected."),api.disconnect()},ondisconnect:function(){ok(!0,"Api disconnected successfully."),equal(api.connecting,!1,"Api should not be connecting."),equal(api.connected,!1,"Api should not be connected."),equal(api.disconnected,!0,"Api should be disconnected."),start()},onerror:function(){ok(!1,"Did not connect to valid server. Detected an error after "+((new Date).getTime()-timestamp)+"ms."),start()}});equal(api.connecting,!1,"Api should not connect by default."),equal(api.connected,!1,"Api should not be connected."),equal(api.disconnected,!0,"Api should be disconnected by default.");var timestamp=(new Date).getTime();api.connect()}),asyncTest("Create an instance with invalid host",function(){var api=new VibeApi({host:"bobberson.net",port:6232,onerror:function(){ok(!0,"Error was detected after "+((new Date).getTime()-timestamp)+"ms"),equal(api.connected,!1,"Api should not be connected."),equal(api.connecting,!1,"Api should not be connecting."),equal(api.disconnected,!0,"Api should be disconnected."),start()}}),timestamp=(new Date).getTime();api.connect()})})