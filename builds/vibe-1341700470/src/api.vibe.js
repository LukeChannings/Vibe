define(["util","lib/socket.io"],function(util){var VibeApi=function(options){if(!util.hasProperties(options,["host","port"]))throw new Error("VibeApi was instantiated without proper options.");this.connected=!1,this.disconnected=!0,this.connecting=!1,this.host=options.host,this.port=options.port,typeof options.onconnect=="function"&&(this.onconnect=options.onconnect),typeof options.ondisconnect=="function"&&(this.ondisconnect=options.ondisconnect),typeof options.onerror=="function"&&(this.onerror=options.onerror),typeof options.onreconnect=="function"&&(this.onreconnect=options.onreconnect),options.autoconnect&&this.connect()},checkForVibeServer=function(url,callback){var isIE8=!!window.XDomainRequest,XHR=isIE8?new window.XDomainRequest:new XMLHttpRequest,hasCalledBack=!1;try{XHR.open("get",url+"/crossdomain.xml")}catch(ex){hasCalledBack||(callback(!1),hasCalledBack=!0);return}isIE8?(XHR.onload=function(){XHR.responseText.length&&!XHR.contentType?hasCalledBack||(callback(!0),hasCalledBack=!0):hasCalledBack||(callback(!1),hasCalledBack=!0)},XHR.onerror=function(){hasCalledBack||(callback(!1),hasCalledBack=!0)}):XHR.onreadystatechange=function(){XHR.readyState==4&&(XHR.status==200?hasCalledBack||(callback(!0),hasCalledBack=!0):hasCalledBack||(callback(!1),hasCalledBack=!0))};try{XHR.send()}catch(ex){hasCalledBack||(callback(!1),hasCalledBack=!0);return}};return VibeApi.prototype.connect=function(){var self=this;checkForVibeServer("http://"+self.host+":"+self.port,function(serverExists){if(serverExists){var socket=self.socket=io.connect("http://"+self.host+":"+self.port,{transports:["websocket","flashsocket","jsonp-polling"],"try multiple transports":!1,"connect timeout":2e3});self.connecting=!0,socket.on("connect",function(){self.connecting=self.disconnected=!1,self.connected=!0,self.onconnect&&self.onconnect()}),socket.on("disconnect",function(){self.connecting=self.connected=!1,self.disconnected=!0,self.ondisconnect&&self.ondisconnect()}),socket.on("reconnect",function(){self.connecting=self.disconnected=!1,self.connected=!0,self.onreconnect&&self.onreconnect()}),socket.on("connect_failed",function(){self.connecting=self.connected=!1,self.disconnected=!0,self.onerror&&self.onerror()})}else self.onerror&&self.onerror()})},VibeApi.prototype.disconnect=function(){this.socket.disconnect(),this.disconnected=!0,this.connected=this.connecting=!1},VibeApi.prototype.getArtists=function(callback){this.socket.emit("getArtists",function(err,artists){artists.sort(function(a,b){return a.name.toLowerCase()<b.name.toLowerCase()?-1:a.name.toLowerCase()>b.name.toLowerCase()?1:0}),callback(artists)})},VibeApi.prototype.getArtistsInGenre=function(genre,callback){var genre=decodeURIComponent(genre);this.socket.emit("getArtistsInGenre",genre,function(err,artists){artists.sort(function(a,b){return a.name.toLowerCase()<b.name.toLowerCase()?-1:a.name.toLowerCase()>b.name.toLowerCase()?1:0}),callback(artists)})},VibeApi.prototype.getAlbums=function(callback){this.socket.emit("getAlbums",function(err,albums){if(err)throw err;callback(albums)})},VibeApi.prototype.getAlbumsByArtist=function(id,callback){this.socket.emit("getAlbumsByArtist",id,function(err,albums){util.forEach(albums,function(album){album.title=album.title||"Unknown Album."}),albums.sort(function(a,b){return a.title.toLowerCase()<b.title.toLowerCase()?-1:a.title.toLowerCase()>b.title.toLowerCase()?1:0}),callback(albums)})},VibeApi.prototype.getTracks=function(callback){this.socket.emit("getTracks",function(err,tracks){callback(tracks)})},VibeApi.prototype.getTracksInGenre=function(genre,callback){genre=decodeURIComponent(genre),this.socket.emit("getTracksInGenre",genre,function(err,tracks){util.forEach(tracks,function(track){track.albumname=track.albumname||"Unknown Album",track.artistname=track.artistname||"Unknown Artist",track.trackname=track.trackname||"Unknown Track",track.trackno=track.trackno||"0"}),callback(tracks)})},VibeApi.prototype.getTracksByArtist=function(id,callback){this.socket.emit("getTracksByArtist",id,function(err,tracks){util.forEach(tracks,function(track){track.albumname=track.albumname||"Unknown Album",track.artistname=track.artistname||"Unknown Artist",track.trackname=track.trackname||"Unknown Track",track.trackno=track.trackno||"0"}),callback(tracks)})},VibeApi.prototype.getTracksInAlbum=function(id,callback){this.socket.emit("getTracksInAlbum",id,function(err,tracks){util.map(tracks,function(track){track.albumname=track.albumname||"Unknown Album",track.artistname=track.artistname||"Unknown Artist",track.trackname=track.trackname||"Unknown Track",track.trackno=track.trackno||"0"}),callback(tracks)})},VibeApi.prototype.getTracksInAlbumShort=function(id,callback){this.socket.emit("getTracksInAlbumShort",id,function(tracks){util.map(tracks,function(track){track.id=track.trackid,track.name=track.trackname||"Unknown Track",track.trackno=track.trackno||null}),callback(tracks)})},VibeApi.prototype.getTrack=function(id,callback){this.socket.emit("getTrack",id,function(err,track){track.albumname=track.albumname||"Unknown Album",track.artistname=track.artistname||"Unknown Artist",track.trackname=track.trackname||"Unknown Track",track.trackno=track.trackno||"0",callback(track)})},VibeApi.prototype.getGenres=function(callback){this.socket.emit("getGenres",function(err,genres){genres.sort(function(a,b){return a.genre.toLowerCase()<b.genre.toLowerCase()?-1:a.genre.toLowerCase()>b.genre.toLowerCase()?1:0}),callback(genres)})},VibeApi.prototype.search=function(query,callback){return!1},VibeApi.prototype.getSubtype=function(type){var types={genre:"artist",artist:"album",album:"track"};return type in types?types[type]:!1},VibeApi.prototype.getMethod=function(type,short){var types={genre:"getArtistsInGenre",artist:"getAlbumsByArtist",album:short?"getTracksInAlbumShort":"getTracksInAlbum"};return type in types?types[type]:!1},VibeApi})