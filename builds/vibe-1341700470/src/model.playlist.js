define(["util","model.undoManager"],function(util,UndoManager){var ModelPlaylist=function(options){if(!util.hasProperties(options,["withApi","withUI"]))throw new Error("The playlist model was not properly configured.");var self=this,model=this.model=(new UndoManager).withPersistence("ModelPlaylist"),api=this.api=options.withApi,ui=this.ui=options.withUI,duration=this.duration=0,index=this.index=0;ui.redraw(model),typeof options.onload=="function"&&options.onload(self)};ModelPlaylist.prototype.updateInfo=function(){var self=this;this.duration=0,util.forEach(this.model,function(track){self.duration+=track.tracklength});var seconds=Math.ceil(this.duration)%60,minutes=Math.ceil(this.duration/60),hours=Math.floor(minutes/60),info="";hours>0&&(minutes%=60),hours!==0?hours=hours==1?hours+" hour, ":hours+" hours, ":hours="",minutes!==0?minutes=minutes==1?minutes+" minute and ":minutes+" minutes and ":minutes="",seconds!==0?seconds=seconds==1?seconds+" second.":seconds+" seconds.":seconds=hours==""&&minutes==""?"No tracks.":"0 seconds.";var info=hours+minutes+seconds;this.ui.infoBar.update(info)},ModelPlaylist.prototype.add=function(type,id,callback){var self=this,index=window.dropIndex,insertAfter=this.ui.list.node.childNodes[index];getItems.call(this,type,id,function(items){typeof index=="number"?(items.unshift(index,0),self.model.splice.apply(self.model,items),items.splice(0,2)):self.model.push.apply(self.model,items),self.ui.addRows(items,insertAfter),typeof callback=="function"&&callback()})},ModelPlaylist.prototype.undo=function(n){this.model.undo(n),this.ui.redraw(this.model)},ModelPlaylist.prototype.redo=function(n){this.model.redo(n),this.ui.redraw(this.model)},ModelPlaylist.prototype.clear=function(){this.model.clear(),this.ui.list.removeChildren(),this.ui.selectedPlaylistItems=[],this.index=0,this.ui.playingNode=null},ModelPlaylist.prototype.setIndex=function(n,node){if(n<0||n>this.model.length)n=0,node=null;this.index=n,this.ui.playingNode!==null&&typeof this.ui.playingNode=="object"&&util.removeClass(this.ui.playingNode,"playing"),node&&typeof node=="object"&&util.addClass(node,"playing"),this.ui.playingNode=node},ModelPlaylist.prototype.indexOfTrackId=function(trackid){var tracks=this.model;for(var i=0;i<tracks.length;i++)if(tracks[i].trackid==trackid)return i;return-1},ModelPlaylist.prototype.getItem=function(n){var index=typeof n=="number"?n:this.index;return this.model[index]};var getItems=function(type,id,callback){var types={genre:"getTracksInGenre",artist:"getTracksByArtist",album:"getTracksInAlbum",track:"getTrack"};if(!types[type])throw new Error("Invalid type used in getItems.","REF_ERR");this.api[types[type]](id,function(tracks){typeof callback=="function"&&callback(tracks)})};return ModelPlaylist})